# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: server.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import server_pb2


class WalletServerBase(abc.ABC):

    @abc.abstractmethod
    async def Call(self, stream: 'grpclib.server.Stream[server_pb2.WalletRequest, server_pb2.WalletResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/WalletServer/Call': grpclib.const.Handler(
                self.Call,
                grpclib.const.Cardinality.UNARY_UNARY,
                server_pb2.WalletRequest,
                server_pb2.WalletResponse,
            ),
        }


class WalletServerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Call = grpclib.client.UnaryUnaryMethod(
            channel,
            '/WalletServer/Call',
            server_pb2.WalletRequest,
            server_pb2.WalletResponse,
        )
